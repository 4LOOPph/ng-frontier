!function(){"use strict";angular.module("ngFrontier",[]).factory("$frontierAnalytics",["$q","$window",function(e,n){return{Initialize:function(e){if(angular.isUndefined(e)||e===!1)return void console.info("Unable to initialize ngFrontier. Invalid parameter values!");if(angular.isObject(e)){var r={accessCode:e.accessCode,trackerName:e.trackerName,encoding:e.encoding,userId:e.userId};return n.Frontier.Initialize(r)}},Reset:function(){return n.Frontier.Reset()},signOut:function(){return n.Frontier.signOut()},debugMode:function(e){return n.Frontier.enableAppDebugging(e)},allowPageTracking:function(e){return n.Frontier.enableTrackPage(e)},allowEventTracking:function(e){return n.Frontier.enableTrackEvent(e)},allowViewTracking:function(e){return n.Frontier.enableTrackView(e)},allowAppTracking:function(e){return n.Frontier.enableTrackApp(e)},allowDeviceTracking:function(e){return n.Frontier.enableTrackDevice(e)},setUserId:function(e){return n.Frontier.setUserID(e)},trackView:function(e){return n.Frontier.screenTrack({screenName:e})},trackEvent:function(e,r,t,i){return n.Frontier.eventTrack({eventCategory:e,eventAction:r,eventLabel:t,eventValue:i})},trackPage:function(e,r,t){return n.Frontier.pageTrack({title:e,location:r,page:t})},trackApp:function(e,r,t,i){return n.Frontier.appTrack({appName:e,appID:r,appVersion:t,appInstallerID:i})},trackDevice:function(e,r,t,i,a,c,o,u){return n.Frontier.deviceTrack({deviceID:e,deviceName:r,deviceBrand:t,deviceModel:i,osName:a,osVersion:c,screenResolution:o,serviceProvider:u})}}}]).directive("faTrackEvent",["$frontierAnalytics","$parse",function(e,n){return{restrict:"A",link:function(r,t,i){var a=n(i.faTrackEvent);t.bind("click",function(){i.faTrackEventIf&&!r.$eval(i.faTrackEventIf)||a.length>1&&e.trackEvent.apply(e,a(r))})}}}])}();
//# sourceMappingURL=ng-frontier.min.js.map
